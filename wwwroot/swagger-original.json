{
  "openapi" : "3.0.2",
  "info" : {
    "title" : "Agrio Example Service Api",
    "description" : "Agrio Example Services Documentation",
    "contact" : {
      "email" : "admin@sophietech.com"
    },
    "version" : "v1"
  },
  "externalDocs" : {
    "description" : "Documentation",
    "url" : "https://doc-example.azurewebsites.net/example"
  },
  "servers" : [ {
    "url" : "http://localhost:5000",
    "description" : "Local Dev"
  }, {
    "url" : "https://mock.example.com/example",
    "description" : "Mock Service"
  }, {
    "url" : "https://api.dev.example.com/example",
    "description" : "Dev Api"
  }, {
    "url" : "https://api.staging.example.com/example",
    "description" : "Staging Api"
  }, {
    "url" : "https://api.example.com/example",
    "description" : "Prod Api"
  } ],
  "tags" : [ {
    "name" : "Entities Tags",
    "description" : "Entities Tags operations"
  } ],
  "paths" : {
    "/entities" : {
      "get" : {
        "tags" : [ "Entities Tags" ],
        "summary" : "Get all Entities",
        "description" : "Get all Entities",
        "operationId" : "getEntities",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "language(s) client is able to understand, and which locale variant is preferred",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "tr", "en", "tr-TR", "en-US" ]
          },
          "example" : "tr"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The number of items to skip before starting to collect the result set.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The numbers of items to return.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "default" : 20
          }
        }, {
          "name" : "term",
          "in" : "query",
          "description" : "Filter argument in which to retrieve the results. Basic text search on relevant fields",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Order in which to retrieve the results. Multiple sort criteria can not be passed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityListModel"
                }
              }
            }
          },
          "400" : {
            "description" : "The specified resource was not valid",
            "headers" : {
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorViewModel"
                }
              }
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "headers" : {
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorViewModel"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ],
        "x-tabak-security-roles" : "superadmin,admin"
      },
      "post" : {
        "tags" : [ "Entities Tags" ],
        "summary" : "Create new Entity",
        "description" : "Create new Entity",
        "operationId" : "createEntity",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "language(s) client is able to understand, and which locale variant is preferred",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "tr", "en", "tr-TR", "en-US" ]
          },
          "example" : "tr"
        } ],
        "requestBody" : {
          "description" : "Create Entity request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityCreateModel"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Location" : {
                "$ref" : "#/components/headers/Location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityViewModel"
                }
              }
            }
          },
          "400" : {
            "description" : "The specified resource was not valid",
            "headers" : {
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorViewModel"
                }
              }
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "headers" : {
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorViewModel"
                }
              }
            }
          },
          "409" : {
            "description" : "The specified resource already persisted",
            "headers" : {
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorViewModel"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ],
        "x-tabak-security-roles" : "superadmin,admin"
      }
    },
    "/entities/{entityId}" : {
      "get" : {
        "tags" : [ "Entities Tags" ],
        "summary" : "Get one Entity",
        "description" : "Get one Entity",
        "operationId" : "getEntity",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "language(s) client is able to understand, and which locale variant is preferred",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "tr", "en", "tr-TR", "en-US" ]
          },
          "example" : "tr"
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "Entity Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityViewModel"
                }
              }
            }
          },
          "400" : {
            "description" : "The specified resource was not valid",
            "headers" : {
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorViewModel"
                }
              }
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "headers" : {
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorViewModel"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ],
        "x-tabak-security-roles" : "superadmin,admin"
      },
      "delete" : {
        "tags" : [ "Entities Tags" ],
        "summary" : "Delete Entity",
        "description" : "Delete Entity",
        "operationId" : "deleteEntity",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "language(s) client is able to understand, and which locale variant is preferred",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "tr", "en", "tr-TR", "en-US" ]
          },
          "example" : "tr"
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "Entity Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "The specified resource was not valid",
            "headers" : {
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorViewModel"
                }
              }
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "headers" : {
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorViewModel"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ],
        "x-tabak-security-roles" : "superadmin,admin"
      },
      "patch" : {
        "tags" : [ "Entities Tags" ],
        "summary" : "Update Entity",
        "description" : "Update Entity",
        "operationId" : "updateEntity",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "language(s) client is able to understand, and which locale variant is preferred",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "tr", "en", "tr-TR", "en-US" ]
          },
          "example" : "tr"
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "Entity Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "Entity request for update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityUpdateModel"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "The specified resource was not valid",
            "headers" : {
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorViewModel"
                }
              }
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "headers" : {
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorViewModel"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ],
        "x-tabak-security-roles" : "superadmin,admin"
      }
    }
  },
  "components" : {
    "schemas" : {
      "DictionaryModel" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 15
          },
          "name" : {
            "type" : "string",
            "example" : "some value"
          }
        }
      },
      "ErrorViewModel" : {
        "required" : [ "code", "detail", "title" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "example" : "fC9LZX"
          },
          "title" : {
            "type" : "string",
            "example" : "Invalid request parameters"
          },
          "detail" : {
            "type" : "string",
            "example" : "The provided resource parameters are not valid."
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "validation error message"
            }
          }
        }
      },
      "EntityCreateModel" : {
        "type" : "object",
        "properties" : {
          "stringField" : {
            "type" : "string",
            "example" : "somestring",
            "x-tabak-validators" : [ {
              "type" : "required",
              "message" : "err.required"
            }, {
              "type" : "minLength",
              "param" : 2,
              "message" : "err.minLength"
            } ],
            "x-tabak-ui" : {
              "type" : "INPUT",
              "inputType" : "text",
              "placeholder" : "label.stringField"
            }
          },
          "relationIdField" : {
            "type" : "integer",
            "example" : 1,
            "x-tabak-validators" : [ {
              "type" : "required",
              "message" : "err.required"
            } ],
            "x-tabak-ui" : {
              "type" : "SELECT",
              "placeholder" : "label.relationField"
            }
          },
          "dictionaryField" : {
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/DictionaryModel"
            } ],
            "x-tabak-validators" : [ {
              "type" : "required",
              "message" : "err.required"
            } ],
            "x-tabak-ui" : {
              "type" : "SELECT",
              "placeholder" : "label.dictionaryField"
            }
          },
          "integerField" : {
            "type" : "integer",
            "example" : 1,
            "x-tabak-validators" : [ {
              "type" : "required",
              "message" : "err.required"
            } ],
            "x-tabak-ui" : {
              "type" : "SELECT",
              "placeholder" : "label.integerField"
            }
          },
          "doubleField" : {
            "type" : "number",
            "format" : "double",
            "example" : 10,
            "x-tabak-validators" : [ {
              "type" : "required",
              "message" : "err.required"
            } ],
            "x-tabak-ui" : {
              "type" : "INPUT",
              "inputType" : "text",
              "placeholder" : "label.doubleField"
            }
          },
          "dateField" : {
            "type" : "string",
            "format" : "date-time",
            "x-tabak-validators" : [ {
              "type" : "required",
              "message" : "err.required"
            } ],
            "x-tabak-ui" : {
              "type" : "INPUT",
              "inputType" : "date",
              "placeholder" : "label.dateField"
            }
          },
          "exampleType" : {
            "type" : "string",
            "enum" : [ "type1", "type2", "type3", "type4" ],
            "x-tabak-validators" : [ {
              "type" : "required",
              "message" : "err.required"
            } ],
            "x-tabak-ui" : {
              "type" : "SELECT",
              "placeholder" : "label.exampleType"
            }
          },
          "exampleStatus" : {
            "type" : "boolean",
            "x-tabak-validators" : [ {
              "type" : "required",
              "message" : "err.required"
            } ],
            "x-tabak-ui" : {
              "type" : "CHECKBOX",
              "placeholder" : "label.exampleStatus"
            }
          }
        }
      },
      "EntityUpdateModel" : {
        "type" : "object",
        "properties" : {
          "stringField" : {
            "type" : "string",
            "example" : "somestring",
            "x-tabak-validators" : [ {
              "type" : "required",
              "message" : "err.required"
            }, {
              "type" : "minLength",
              "param" : 2,
              "message" : "err.minLength"
            } ]
          },
          "relationIdField" : {
            "type" : "integer",
            "example" : 1,
            "x-tabak-validators" : [ {
              "type" : "required",
              "message" : "err.required"
            } ]
          },
          "dictionaryField" : {
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/DictionaryModel"
            } ],
            "x-tabak-validators" : [ {
              "type" : "required",
              "message" : "err.required"
            } ]
          },
          "integerField" : {
            "type" : "integer",
            "example" : 1,
            "x-tabak-validators" : [ {
              "type" : "required",
              "message" : "err.required"
            } ]
          },
          "doubleField" : {
            "type" : "number",
            "format" : "double",
            "example" : 10,
            "x-tabak-validators" : [ {
              "type" : "required",
              "message" : "err.required"
            } ]
          },
          "dateField" : {
            "type" : "string",
            "format" : "date-time",
            "x-tabak-validators" : [ {
              "type" : "required",
              "message" : "err.required"
            } ]
          },
          "exampleType" : {
            "type" : "string",
            "enum" : [ "type1", "type2", "type3", "type4" ],
            "x-tabak-validators" : [ {
              "type" : "required",
              "message" : "err.required"
            } ]
          },
          "exampleStatus" : {
            "type" : "boolean",
            "x-tabak-validators" : [ {
              "type" : "required",
              "message" : "err.required"
            } ]
          }
        }
      },
      "EntityViewModel" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "x-tabak-ui" : {
              "type" : "INPUT",
              "inputType" : "hidden"
            }
          },
          "stringField" : {
            "type" : "string",
            "example" : "somestring",
            "x-tabak-ui" : {
              "type" : "INPUT",
              "inputType" : "text",
              "placeholder" : "label.stringField"
            }
          },
          "relationIdField" : {
            "type" : "integer",
            "example" : 1,
            "x-tabak-ui" : {
              "type" : "SELECT",
              "placeholder" : "label.relationField"
            }
          },
          "dictionaryField" : {
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/DictionaryModel"
            } ],
            "x-tabak-ui" : {
              "type" : "SELECT",
              "placeholder" : "label.dictionaryField"
            }
          },
          "integerField" : {
            "type" : "integer",
            "example" : 1,
            "x-tabak-ui" : {
              "type" : "SELECT",
              "placeholder" : "label.integerField"
            }
          },
          "doubleField" : {
            "type" : "number",
            "format" : "double",
            "example" : 10,
            "x-tabak-ui" : {
              "type" : "INPUT",
              "inputType" : "text",
              "placeholder" : "label.doubleField"
            }
          },
          "dateField" : {
            "type" : "string",
            "format" : "date-time",
            "x-tabak-ui" : {
              "type" : "INPUT",
              "inputType" : "date",
              "placeholder" : "label.dateField"
            }
          },
          "exampleType" : {
            "type" : "string",
            "enum" : [ "type1", "type2", "type3", "type4" ],
            "x-tabak-ui" : {
              "type" : "SELECT",
              "placeholder" : "label.exampleType"
            }
          },
          "exampleStatus" : {
            "type" : "boolean",
            "x-tabak-ui" : {
              "type" : "CHECKBOX",
              "placeholder" : "label.exampleStatus"
            }
          }
        },
        "example" : {
          "relationIdField" : 1,
          "doubleField" : 10,
          "exampleType" : "type1",
          "dictionaryField" : "",
          "integerField" : 1,
          "exampleStatus" : true,
          "dateField" : "2000-01-23T04:56:07.000+00:00",
          "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "stringField" : "somestring"
        }
      },
      "EntityListItemModel" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "x-tabak-ui" : {
              "type" : "INPUT",
              "inputType" : "hidden"
            }
          },
          "stringField" : {
            "type" : "string",
            "example" : "somestring",
            "x-tabak-ui" : {
              "type" : "INPUT",
              "inputType" : "text",
              "placeholder" : "label.stringField"
            }
          },
          "relationNameField" : {
            "type" : "string",
            "example" : "1",
            "x-tabak-ui" : {
              "type" : "INPUT",
              "inputType" : "text",
              "placeholder" : "label.relationField"
            }
          },
          "integerField" : {
            "type" : "integer",
            "example" : 1,
            "x-tabak-ui" : {
              "type" : "SELECT",
              "placeholder" : "label.integerField"
            }
          }
        },
        "example" : {
          "relationNameField" : "1",
          "integerField" : 1,
          "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "stringField" : "somestring"
        }
      },
      "EntityListModel" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "description" : "Total items count"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EntityListItemModel"
            }
          }
        },
        "example" : {
          "totalCount" : 0,
          "items" : [ {
            "relationNameField" : "1",
            "integerField" : 1,
            "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
            "stringField" : "somestring"
          }, {
            "relationNameField" : "1",
            "integerField" : 1,
            "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
            "stringField" : "somestring"
          } ]
        }
      }
    },
    "responses" : {
      "BadRequest" : {
        "description" : "The specified resource was not valid",
        "headers" : {
          "Content-Language" : {
            "$ref" : "#/components/headers/Content-Language"
          }
        },
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorViewModel"
            }
          }
        }
      },
      "Forbidden" : {
        "description" : "You are not allowed to take specified action",
        "headers" : {
          "Content-Language" : {
            "$ref" : "#/components/headers/Content-Language"
          }
        },
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorViewModel"
            }
          }
        }
      },
      "Conflict" : {
        "description" : "The specified resource already persisted",
        "headers" : {
          "Content-Language" : {
            "$ref" : "#/components/headers/Content-Language"
          }
        },
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorViewModel"
            }
          }
        }
      },
      "NotFound" : {
        "description" : "The specified resource was not found",
        "headers" : {
          "Content-Language" : {
            "$ref" : "#/components/headers/Content-Language"
          }
        },
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorViewModel"
            }
          }
        }
      },
      "Unauthorized" : {
        "description" : "Unauthorized",
        "headers" : {
          "Content-Language" : {
            "$ref" : "#/components/headers/Content-Language"
          }
        },
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorViewModel"
            }
          }
        }
      },
      "NoContent" : {
        "description" : "No Content"
      }
    },
    "parameters" : {
      "DeviceHashHeaderParameter" : {
        "name" : "X-Device-Hash",
        "in" : "header",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "AcceptLanguageParameter" : {
        "name" : "Accept-Language",
        "in" : "header",
        "description" : "language(s) client is able to understand, and which locale variant is preferred",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "enum" : [ "tr", "en", "tr-TR", "en-US" ]
        },
        "example" : "tr"
      },
      "Offset" : {
        "name" : "offset",
        "in" : "query",
        "description" : "The number of items to skip before starting to collect the result set.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "minimum" : 0,
          "type" : "integer",
          "default" : 0
        }
      },
      "Limit" : {
        "name" : "limit",
        "in" : "query",
        "description" : "The numbers of items to return.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "maximum" : 100,
          "minimum" : 1,
          "type" : "integer",
          "default" : 20
        }
      },
      "Term" : {
        "name" : "term",
        "in" : "query",
        "description" : "Filter argument in which to retrieve the results. Basic text search on relevant fields",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "string",
          "default" : ""
        }
      },
      "Sort" : {
        "name" : "sort",
        "in" : "query",
        "description" : "Order in which to retrieve the results. Multiple sort criteria can not be passed",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "string",
          "default" : ""
        }
      },
      "EntityParameter" : {
        "name" : "entityId",
        "in" : "path",
        "description" : "Entity Id",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "format" : "uuid"
        }
      },
      "EntityTypeParameter" : {
        "name" : "exampleType",
        "in" : "path",
        "description" : "Entity Type",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "enum" : [ "type1", "type2", "type3", "type4" ]
        }
      }
    },
    "headers" : {
      "Location" : {
        "description" : "A link to created resource",
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "format" : "url"
        },
        "example" : 3
      },
      "Content-Language" : {
        "description" : "the language(s) intended for the audience",
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "enum" : [ "tr-TR", "en-US" ]
        },
        "example" : "tr-TR"
      },
      "X-RateLimit-Limit" : {
        "description" : "Request limit per hour.",
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "integer"
        }
      },
      "X-RateLimit-Remaining" : {
        "description" : "The number of requests left for the time window.",
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "integer"
        }
      },
      "X-RateLimit-Reset" : {
        "description" : "The UTC date/time at which the current rate limit window resets.",
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "securitySchemes" : {
      "bearer" : {
        "type" : "apiKey",
        "description" : "Authorization header using the Bearer scheme. Ex: \"Authorization: Bearer {token}\"",
        "name" : "Authorization",
        "in" : "header"
      }
    }
  },
  "x-tabak" : {
    "resources" : [ {
      "name" : "Entity",
      "schemas" : {
        "create" : "EntityCreateModel",
        "view" : "EntityViewModel",
        "update" : "EntityUpdateModel",
        "list" : "EntityListModel",
        "list-item" : "EntityListItemModel"
      },
      "operations" : {
        "create" : "createEntity",
        "get" : "getEntity",
        "update" : "updateEntity",
        "list" : "getEntities",
        "delete" : "deleteEntity"
      }
    } ]
  }
}
